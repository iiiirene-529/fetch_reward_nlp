The OfferSearchTool is a Python-based search utility designed to facilitate the discovery of promotional offers within an application, with a special focus on enhancing user experience through intelligent query processing. At the heart of the tool's search functionality lies the FuzzyWuzzy library, which employs the Levenshtein Distance to evaluate and handle approximate string matches. This choice is grounded in the assumption that users will not always input perfectly spelled queries, and thus, the tool must be robust against such variations to maintain a seamless experience.

The application's data processing workflow involves merging separate datasets into a single, cohesive DataFrame. This merging process assumes that the datasets are consistent and reliable, and that they follow a predictable structure which allows for such an amalgamation. The key tradeoff considered here is between the complexity of data processing and the richness of the search results; merging datasets ensures depth and context in the search results at the cost of increased preprocessing of data.

Category-based queries are given precedence in the search algorithm, based on the assumption that users are more likely to search for offers by category rather than by brand or retailer. This decision potentially narrows the initial search scope, leading to faster and more relevant results, but may also sideline equally relevant results that fall outside the primary category.

To run the OfferSearchTool locally, one must first ensure that Python is installed on the system, along with the necessary libraries such as pandas and FuzzyWuzzy, which can be installed via pip. With the datasets placed in the same directory as the script, running the script from a command line will initiate the tool, prompting the user to input their desired search query and typeâ€”be it brand, category, or retailer. The tool then processes this input and outputs the top 50 most relevant offers. The simple command-line interface was chosen for its universality and ease of use, allowing users of varying technical backgrounds to interact with the tool without a graphical interface.


